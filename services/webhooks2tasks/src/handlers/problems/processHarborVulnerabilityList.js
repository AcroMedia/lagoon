// @flow

const { logger } = require('@lagoon/commons/src/local-logging');
const { addProblem, deleteProblemsFromSource } = require('@lagoon/commons/src/api');
const HARBOUR_VULNERABILITY_SOURCE = 'harbor';


async function processHarborVulnerabilityList(webhook: WebhookRequestData, channelWrapperWebhooks) {
  const {
    webhooktype,
    event,
    uuid,
    body
  } = webhook;

  //TODO: grab the environment id - fail if issue
  const {
    lagoonProjectId,
    lagoonEnvironmentId,
    vulnerabilities
  } = body;

  deleteProblemsFromSource(lagoonEnvironmentId, HARBOUR_VULNERABILITY_SOURCE);

  vulnerabilities.forEach(element => {
    try {
      addProblem(null,
        lagoonEnvironmentId,
        element.id,
        element.severity,
        HARBOUR_VULNERABILITY_SOURCE,
        null,
        JSON.stringify({description: element.description, links: element.links})
      );
    }
    catch (error) {
      //TODO: proper error handling
      console.log(error);
    }
  });

}

module.exports = processHarborVulnerabilityList;